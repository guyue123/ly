<?xml version="1.0"?>
<!--
xs:string
xs:decimal
xs:integer
xs:boolean
xs:date
xs:time
-->

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://luoying.huliqing.name"
           xmlns="http://luoying.huliqing.name"
           elementFormDefault="qualified">
    
    <xs:include schemaLocation="./base.xsd" />
    
    <xs:element name="root">
        <xs:complexType>
            <xs:all>
                <xs:element ref="skinOutfit" />
                <xs:element ref="skinWeapon" />
            </xs:all>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="skinOutfit">
        <xs:annotation>
            <xs:documentation>
                基本skin,如：皮肤，装备等
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="baseSkin">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="skinWeapon">
        <xs:annotation>
            <xs:documentation>
                武器装备
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="baseSkin">
                    <xs:attribute name="weaponType" type="xs:string" use="required" >
                        <xs:annotation>
                            <xs:documentation>
                                指定一个武器类型，格式："weaponType", 如："rightSword", 参考: define.xml中weaponType的定义 
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="slots" type="xs:integer" use="required" >
                        <xs:annotation>
                            <xs:documentation>
                                设置武器支持的槽位列表,格式如："slot1,slot2,...",
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:complexType name="baseSkin">
        <xs:complexContent>
            <xs:extension base="base">
                <xs:attribute name="icon" ref="icon" use="required" />
                <xs:attribute name="file" ref="file" use="required" />
                <xs:attribute name="baseSkin" type="bool" use="optional" >
                    <xs:annotation>
                        <xs:documentation>是否为基本破肤</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="parts" use="required" >
                    <xs:annotation>
                        <xs:documentation>
                            皮肤部位定义，see define.xml => defineSkinType,  格式 : "skinPart1,skinPart2,..."
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="conflictParts" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            排斥的目标skinPart，格式："skinPart1,skinPart2,...",一般情况下，当一个skin添加到角色身上时，目标角色身上的
                            相同部位的皮肤会脱下来，即同一个类型的skin不可能同时添加到角色身上.而conflictParts可以指定额外的排斥部位。
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="bindBone" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>
                            如果指定了一个骨头名称，则skin将会被绑定到该骨头上,否则将直接被绑定到目标根节点。
                            注：对于使用bindBone的skin模型必须在blender导出时使用obj格式，不能使用ogre格式导出。
                            否则在绑定到角色身上时会发生错位。对于静态类的skin模型（即没有动画、不受权重影响的模型）
                            直接绑定到骨头节点上性能比较好。
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="localLocation" type="xs:stirng" use="optional">
                    <xs:annotation><xs:documentation>skin添加到目标时的本地变换，格式："x,y,z"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="localRotation" type="xs:stirng" use="optional">
                    <xs:annotation><xs:documentation>skin添加到目标时的本地旋转(弧度)，格式："x,y,z"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="localScale" type="xs:stirng" use="optional">
                    <xs:annotation><xs:documentation>skin添加到目标时的本地缩放，格式："x,y,z"</xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute name="applyAttributes" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>
                            指定要应用到目标角色上的属性，格式："attribute|value",多个设置使用半角逗号分隔。
                            示例："attributeDefence|50,attributeMagicDefence|30", 表示物理防御+50，魔法防御+30
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="checkEl" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>绑定或直接填写一条SBooleanEl, 这条El用来判断source角色是否可以使用这件装备，示例：#{!s.attributeDead}</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sounds" type="xs:string" use="optional" >
                    <xs:annotation>
                        <xs:documentation>声效,格式:"sound1,sound2,..."</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute ref="mat" use="optional" />
                <xs:attribute ref="total" use="optional" />
                <xs:attribute ref="tradeInfos" use="optional" />
                <!--<xs:attribute name="cost" ref="cost" use="optional" />-->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
</xs:schema>

<?xml version="1.0" encoding="UTF-8"?>

<root
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
    xmlns='http://luoying.huliqing.name'
    xsi:schemaLocation='http://luoying.huliqing.name ../../../../ly-kernel/src/LuoYing/Data/meta/el.xsd'>
    
    <!--==========================================================================-->
    <!--角色状态判断-->
    <!--==========================================================================-->
    
    <!--判断角色死亡-->
    <elSBoolean id="elActorDeadCheck" expression="#{s.attributeDead}" />
    
    <!--判断角色不死亡-->
    <elSBoolean id="elActorUndeadCheck" expression="#{!s.attributeDead}" />
    
    <!--判断一个角色是否可以被清理出场景-->
    <elSBoolean id="elActorCleanCheck" expression="#{s.attributeDead && !s.attributeEssential}" />
    
    <!--判断目标t是否为s的敌人-->
    <elSTBoolean id="elActorEnemyCheck" expression="#{!t.attributeDead && t.attributeGroup != s.attributeGroup}" />

    <!--==========================================================================-->
    <!--角色经验公式:配置给角色，计算角色在升级时，每个等级所需要的经验值。即表示从等级 leve - 1 升级到 level 时需要的经验值。-->
    <!--==========================================================================-->

    <elLNumber  id="elLevelUp" expression="#{0 + 50 * Math:pow(1.2, l)}" />
    
    <!--==========================================================================-->
    <!--经验值掉落公式, 配置给Drop，用于指定当角色(source)死亡后(target)可以从source身上获得的属性值。-->
    <!--==========================================================================-->
    
    <!--默认公式-->
    <elSTNumber id="elDropXp" expression="#{(s.attributeLevel + 1) / (t.attributeLevel + 1) * (0 + 12 * Math:pow(1.1, s.attributeLevel))}" />

    <!--==========================================================================-->
    <!--属性值等级公式: 配置给属性，用于计算属性在指定等级时的属性值。-->
    <!--==========================================================================-->
    
    <!--生命值和魔法值-->
    <elLNumber id="elLevelAttrHealth"               expression="#{-60 + 120 * Math:pow(1.1,  l)}" />
    <elLNumber id="elLevelAttrMana"                 expression="#{-60 + 120  * Math:pow(1.05, l)}" />
    <!--物理攻击-->
    <elLNumber id="elLevelAttrAttack"               expression="#{-45 + 50 * Math:pow(1.06, l)}" />
    <!--魔法攻击力-->
    <elLNumber id="elLevelAttrMagicAttack"     expression="#{-45 + 50 * Math:pow(1.06, l)}" />
    <!--物理防御-->
    <elLNumber id="elLevelAttrDefence"            expression="#{-20 + 25 * Math:pow(1.05, l)}" />
    <!--魔法防御-->
    <elLNumber id="elLevelAttrMagicDefence"  expression="#{-20 + 25 * Math:pow(1.05, l)}" />
    <!--角色视力，影响搜查敌人的范围-->
    <elLNumber id="elLevelAttrVision"                   expression="#{30}" />
    <!--每秒生命/魔法恢复量公式-->
    <elLNumber id="elLevelAttrHealthRestore"     expression="#{1.5}" />
    <elLNumber id="elLevelAttrManaRestore"       expression="#{1.5}" />
    <!--攻击速度,1为正常速度-->
    <elLNumber id="elLevelAttrAttackSpeed"        expression="#{1}" />
    <!--攻击速度,1为正常速度-->
    <elLNumber id="elLevelAttrMagicSpeed"        expression="#{1}" />
    <!--移动速度，1为正常速度-->
    <elLNumber id="elLevelAttrMoveSpeed"         expression="#{1}" />
    <!--防御率和躲闪率，取值[0.0~1.0],1为100防守-->
    <elLNumber id="elLevelAttrDefenceRate"        expression="#{l / 60}" />
    <elLNumber id="elLevelAttrDuckRate"             expression="#{l / 60}" />
    <!--连招反应能力,取值[0.0~1.0]-->
    <elLNumber id="elLevelAttrGhostRate"            expression="#{l / 60}" />
    
    <!--==========================================================================-->
    <!--Module: 天赋等级公式：配置给TalentModule，这表示每一个等级角色可以获得的天赋点数。-->
    <!--==========================================================================-->
    
    <!--默认公式: 每升一级奖励一点天赋-->
    <elLNumber id="elTalentLevelPoints" expression="#{1}" />
    
    <!--==========================================================================-->
    <!--Talent: 天赋等级公式，配置给天赋使用，指定各种天赋在达到指定等级时可产生的作用值。-->
    <!--==========================================================================-->
    
    <elLNumber id="elTalentLifeRestore"          expression="#{l}" />
    <elLNumber id="elTalentManaRestore"      expression="#{l * 2}" />
    <elLNumber id="elTalentDefence"               expression="#{l * 2 + 2 * Math:pow(1.06, l)}" />
    <elLNumber id="elTalentMagicDefence"    expression="#{l * 2 + 2 * Math:pow(1.06, l)}" />
    <elLNumber id="elTalentAttack"                  expression="#{l * 2 + 3 * Math:pow(1.06, l)}" />
    <elLNumber id="elTalentMagicAttack"       expression="#{l * 2 + 3 * Math:pow(1.06, l)}" />
    <elLNumber id="elTalentVision"                  expression="#{l}" />
    <elLNumber id="elTalentMoveSpeed"        expression="#{l * 0.04}" />
    
    <!--==========================================================================-->
    <!--Skill Hit: 用于技能Hit判断-->
    <!--==========================================================================-->
    
    <elSTBoolean id="elSkillFightHitCheck" expression="#{s.attributeGroup != t.attributeGroup}" />
    
    <!--增益状态:只对友军及自己有效-->
    <elSTBoolean id="elSkillBuffCheck" expression="#{s.attributeGroup == t.attributeGroup && t.attributeBiology && !t.attributeDead}" />
    
    <!--用于复活术:必须是死亡状态才可以执行。-->
    <elSTBoolean id="elSkillRebornCheck" expression="#{s.attributeGroup == t.attributeGroup && t.attributeBiology && t.attributeDead}" />
    
    <!--==========================================================================-->
    <!--Skill LevelUP: 技能升级公式:配置给技能，计算技能在升到指定等级时需要的技能点数（熟练度）。
    即表示从等级 leve - 1 升级到 level 时需要的技能点数-->
    <!--==========================================================================-->
    
    <!--默认公式-->
    <elLNumber  id="elSkillLevelUp" expression="#{10 * l}" />
    
    <!--==========================================================================-->
    <!-- Skill Level: 技能等级公式，为每个技能计算一个等级值。这个等级值由技能使用，根据不同类型的技能可能应用情况不一样。-->
    <!--==========================================================================-->
    <elLNumber id="elSkillLevel" expression="#{1 + 0.2 * (l - 1)}" />
    
    <!--==========================================================================-->
    <!-- Skill Hit: 技能输出公式， 配置给技能，用于计算技能可以造成的输出,技能的输出可以是正负值，负值一般视为伤害输出，
    如：普通攻击、魔法攻击; 正值一般为增益输出，如一些加血、加魔、加属性值等技能。
    -->
    <!--==========================================================================-->
    
    <!-- 默认物理伤害: 配置给攻击技能-->
    <elSkillHitNumber id="elSkillAttack" expression="#{-(s.attributeAttack + skillHitValue  > t.attributeDefence ? s.attributeAttack + skillHitValue - t.attributeDefence : 0)}" />
    <!-- 默认魔法伤害: 配置给魔法技能-->
    <elSkillHitNumber id="elSkillMagicAttack" expression="#{-(s.attributeMagicAttack + skillHitValue > t.attributeMagicDefence ? s.attributeMagicAttack + skillHitValue - t.attributeMagicDefence : 0)}" />
    <!-- 绝对攻击, 配置给攻击技能，不考虑角色攻击力及目标的防御。-->
    <elSkillHitNumber id="elSkillAbsoluteAttack" expression="#{-skillHitValue}" />
    <!-- 技能增加效果: 配置给增益技能，默认只使用技能的自身输出值.-->
    <elSkillHitNumber id="elSkillBuff" expression="#{skillHitValue}" />
    
    <!--==========================================================================-->
    <!-- Item: 物品使用检查, 这些EL用于检查角色是否可以使用指定的物品 -->
    <!--==========================================================================-->

    <!--普通物品的使用：角色必须活着才可以使用-->
    <elSBoolean id="elItemSimpleUse" expression="#{!s.attributeDead}" />

    <!--人类种族书籍： 只有人类才可以使用的技能书-->
    <elSBoolean id="elItemBookHuman" expression="#{!s.attributeDead && s.attributeRace == 1}" />
    
    <!--==========================================================================-->
    <!-- Skin: 皮肤、装备、武器使用检查, 这些EL用于检查角色是否可以使用指定的装备、武器 -->
    <!--==========================================================================-->

    <!--人类装备: 定义只有人类才可以使用的装备-->
    <elSBoolean id="elSkinHuman" expression="#{!s.attributeDead && s.attributeRace == 1}" />
    
    <!--人类女性装备: 定义只有人类女性才可以使用的装备-->
    <elSBoolean id="elSkinHumanFemale" expression="#{!s.attributeDead && s.attributeRace == 1 && s.attributeSex == 1}" />
    
    <!--==========================================================================-->
    <!-- Chat: 对话功能，这些El用于检查一个对话是否对目标角色可见 -->
    <!--==========================================================================-->
    
    <!--同伴、同分组-->
    <elSTBoolean id="elChatCheckFriendly" expression="#{!s.attributeDead && !t.attributeDead && s.attributeGroup == t.attributeGroup && t.attributeBiology}" />
    
    <!--用于任务角色对话-->
    <elSTBoolean id="elChatCheckTask" expression="#{!s.attributeDead && !t.attributeDead && t.attributeBiology}" />
</root>




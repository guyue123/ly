<?xml version="1.0"?>
<!--
xs:string
xs:decimal
xs:integer
xs:boolean
xs:date
xs:time
-->

<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://luoying.huliqing.name"
           xmlns="http://luoying.huliqing.name"
           elementFormDefault="qualified">
    
    <xs:include schemaLocation="./base.xsd" />
    
    <xs:element name="root">
        <xs:complexType>
            <xs:all>
                <xs:element ref="actionStaticIdle" />
                <xs:element ref="actionDynamicIdle" />
                <xs:element ref="actionPatrolIdle" />
                <xs:element ref="actionPathRun" />
                <xs:element ref="actionSimpleRun" />
                <xs:element ref="actionPathFollow" />
                <xs:element ref="actionDynamicFight" />
            </xs:all>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionDynamicFight">
        <xs:annotation>
            <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                    <xs:attribute name="allowFollow" type="bool" use="required" >
                        <xs:annotation>
                            <xs:documentation>是否允许跟随目标</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="autoFacing" type="bool" use="required">
                        <xs:annotation>
                            <xs:documentation>是否自动朝向目标</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="autoTakeOffWeapon" type="bool" use="optional">
                        <xs:annotation>
                            <xs:documentation>在战斗结束后自动摘下武器</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="followTimeMax" type="xs:decimal" use="optional">
                        <xs:annotation>
                            <xs:documentation>
                                允许跟随的时长限制,在该跟随时间内如果无法攻击目标,则停止跟随,这可以防止
                                monster一下跟随攻击目标.(单位秒).
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="fightSkillTypes" type="xs:string" use="required">
                        <xs:annotation>
                            <xs:documentation>指定可用于战斗的技能类型的标记, 格式: "skillType1,skillType2,..."</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="attackIntervalAttribute" type="xs:string" use="optional" >
                        <xs:annotation>
                            <xs:documentation>
                                用于限制攻击时间间隔的角色属性的名称,这个属性的值的有效范围在[0.0~1.0]之间，
                                超过该范围则被截取。当属性值为1.0时为最高，则角色在战斗过程中两个技能之间的
                                时间间隔将为0.这样可看到角色的平滑连招.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="attackIntervalMax" type="xs:string" use="optional" >
                        <xs:annotation>
                            <xs:documentation>
                                指定用于限制角色攻击的最高时间间隔，单位秒。攻击时间间隔即两个攻击技能之间的
                                时间间隔。默认值1.0，即角色在攻击后需要等待一秒的时间后才能再攻击。角色的最
                                终攻击时间限制受attackIntervalAttribute属性影响，当attackIntervalAttribute的值
                                为1.0时，攻击限制将为最小值0.如果没有设置attackIntervalAttribute属性，则攻击时间
                                间隔将以attackIntervalMax定义的固定值为准。
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionPathFollow">
        <xs:annotation>
            <xs:documentation>跟随行为</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                    <xs:attribute name="autoFacing" use="required" type="bool">
                        <xs:annotation>
                            <xs:documentation>是否自动朝向目标</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="debug" use="optional" type="bool">
                        <xs:annotation>
                            <xs:documentation>显示跟随路径DEBUG信息</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionSimpleRun">
        <xs:annotation>
            <xs:documentation>普通的走路行为，只有普通的避障功能,不能寻路</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionPathRun">
        <xs:annotation>
            <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                    <xs:attribute name="debug" use="optional" >
                        <xs:annotation>
                            <xs:documentation>显示寻路信息，如果存在寻路</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionPatrolIdle">
        <xs:annotation>
            <xs:documentation>巡逻行为</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                    <xs:attribute name="walkPosTotal" use="optional" type="xs:integer">
                        <xs:annotation>
                            <xs:documentation>设置IDLE坐标点数量</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="walkRadius" use="optional" type="xs:decimal">
                        <xs:annotation>
                            <xs:documentation>设置IDLE半径</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="waitingTimeMax" use="optional" type="xs:decimal">
                        <xs:annotation>
                            <xs:documentation>设置IDLE等待的允许最长时间,单位秒</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionDynamicIdle">
        <xs:annotation>
            <xs:documentation>动态的idle行为</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                    <xs:attribute name="intervalMax" use="optional" type="xs:decimal">
                        <xs:annotation>
                            <xs:documentation>行为的执行时间间隔最大值，默认7.0秒</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="actionStaticIdle">
        <xs:annotation>
            <xs:documentation>配置给所有不能移动的角色的idle行为</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="actionBase">
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <xs:complexType name="actionBase">
        <xs:annotation>
            <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="base">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
</xs:schema>
